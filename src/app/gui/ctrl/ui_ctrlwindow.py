# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './src/app/gui/ctrl/ctrlwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from ..widget.qerror import QError
from ..widget.qmemories import QMemories
from ..widget.qspeed import QSpeed
from ..widget.qtorque import QTorque
from .res import img_rc


class Ui_CtrlWindow(object):
    def setupUi(self, CtrlWindow):
        CtrlWindow.setObjectName("CtrlWindow")
        CtrlWindow.resize(568, 476)
        self.centralwidget = QtWidgets.QWidget(CtrlWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widgetSpeed = QSpeed(self.centralwidget)
        self.widgetSpeed.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.widgetSpeed.setFrameShadow(QtWidgets.QFrame.Raised)
        self.widgetSpeed.setObjectName("widgetSpeed")
        self.horizontalLayout.addWidget(self.widgetSpeed)
        self.widgetTorque = QTorque(self.centralwidget)
        self.widgetTorque.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.widgetTorque.setFrameShadow(QtWidgets.QFrame.Raised)
        self.widgetTorque.setObjectName("widgetTorque")
        self.horizontalLayout.addWidget(self.widgetTorque)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.frameError = QError(self.centralwidget)
        self.frameError.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameError.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameError.setObjectName("frameError")
        self.verticalLayout.addWidget(self.frameError)
        self.groupBoxMemories = QMemories(self.centralwidget)
        self.groupBoxMemories.setObjectName("groupBoxMemories")
        self.verticalLayout.addWidget(self.groupBoxMemories)
        CtrlWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(CtrlWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 568, 22))
        self.menuBar.setObjectName("menuBar")
        self.menuSystem = QtWidgets.QMenu(self.menuBar)
        self.menuSystem.setObjectName("menuSystem")
        self.menuMotor = QtWidgets.QMenu(self.menuBar)
        self.menuMotor.setObjectName("menuMotor")
        self.menuHelp = QtWidgets.QMenu(self.menuBar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuWorkspace = QtWidgets.QMenu(self.menuBar)
        self.menuWorkspace.setObjectName("menuWorkspace")
        self.menuBoard = QtWidgets.QMenu(self.menuBar)
        self.menuBoard.setObjectName("menuBoard")
        self.menuMemory = QtWidgets.QMenu(self.menuBar)
        self.menuMemory.setObjectName("menuMemory")
        CtrlWindow.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(CtrlWindow)
        self.statusBar.setObjectName("statusBar")
        CtrlWindow.setStatusBar(self.statusBar)
        self.toolBar = QtWidgets.QToolBar(CtrlWindow)
        self.toolBar.setObjectName("toolBar")
        CtrlWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionLink = QtWidgets.QAction(CtrlWindow)
        self.actionLink.setCheckable(True)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/img/32/unlink.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap(":/img/32/link.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon.addPixmap(QtGui.QPixmap(":/img/32/link.png"), QtGui.QIcon.Active, QtGui.QIcon.Off)
        icon.addPixmap(QtGui.QPixmap(":/img/32/unlink.png"), QtGui.QIcon.Active, QtGui.QIcon.On)
        self.actionLink.setIcon(icon)
        self.actionLink.setObjectName("actionLink")
        self.actionMotorStart = QtWidgets.QAction(CtrlWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/img/32/start.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionMotorStart.setIcon(icon1)
        self.actionMotorStart.setObjectName("actionMotorStart")
        self.actionLightEnabled = QtWidgets.QAction(CtrlWindow)
        self.actionLightEnabled.setCheckable(True)
        self.actionLightEnabled.setChecked(True)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/img/32/light-off.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon2.addPixmap(QtGui.QPixmap(":/img/32/light-on.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon2.addPixmap(QtGui.QPixmap(":/img/32/light-on.png"), QtGui.QIcon.Active, QtGui.QIcon.Off)
        icon2.addPixmap(QtGui.QPixmap(":/img/32/light-off.png"), QtGui.QIcon.Active, QtGui.QIcon.On)
        self.actionLightEnabled.setIcon(icon2)
        self.actionLightEnabled.setObjectName("actionLightEnabled")
        self.actionLightBlue = QtWidgets.QAction(CtrlWindow)
        self.actionLightBlue.setCheckable(True)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/img/32/light.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon3.addPixmap(QtGui.QPixmap(":/img/32/light-blue.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon3.addPixmap(QtGui.QPixmap(":/img/32/light-blue.png"), QtGui.QIcon.Active, QtGui.QIcon.Off)
        icon3.addPixmap(QtGui.QPixmap(":/img/32/light.png"), QtGui.QIcon.Active, QtGui.QIcon.On)
        self.actionLightBlue.setIcon(icon3)
        self.actionLightBlue.setObjectName("actionLightBlue")
        self.actionMotorReverse = QtWidgets.QAction(CtrlWindow)
        self.actionMotorReverse.setCheckable(True)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/img/32/clockwise.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon4.addPixmap(QtGui.QPixmap(":/img/32/counterclockwise.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        icon4.addPixmap(QtGui.QPixmap(":/img/32/counterclockwise.png"), QtGui.QIcon.Active, QtGui.QIcon.Off)
        icon4.addPixmap(QtGui.QPixmap(":/img/32/clockwise.png"), QtGui.QIcon.Active, QtGui.QIcon.On)
        self.actionMotorReverse.setIcon(icon4)
        self.actionMotorReverse.setObjectName("actionMotorReverse")
        self.actionAbout = QtWidgets.QAction(CtrlWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionQuit = QtWidgets.QAction(CtrlWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.actionAutoRefresh = QtWidgets.QAction(CtrlWindow)
        self.actionAutoRefresh.setCheckable(True)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/img/32/autorefresh.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionAutoRefresh.setIcon(icon5)
        self.actionAutoRefresh.setObjectName("actionAutoRefresh")
        self.actionUnlink = QtWidgets.QAction(CtrlWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/img/32/unlink.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionUnlink.setIcon(icon6)
        self.actionUnlink.setObjectName("actionUnlink")
        self.actionRefresh = QtWidgets.QAction(CtrlWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/img/32/refresh.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionRefresh.setIcon(icon7)
        self.actionRefresh.setObjectName("actionRefresh")
        self.actionHelp = QtWidgets.QAction(CtrlWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/img/32/help.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionHelp.setIcon(icon8)
        self.actionHelp.setObjectName("actionHelp")
        self.actionMotorStop = QtWidgets.QAction(CtrlWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/img/32/stop.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionMotorStop.setIcon(icon9)
        self.actionMotorStop.setObjectName("actionMotorStop")
        self.actionFirmReset = QtWidgets.QAction(CtrlWindow)
        self.actionFirmReset.setObjectName("actionFirmReset")
        self.actionAPISendFirmware = QtWidgets.QAction(CtrlWindow)
        self.actionAPISendFirmware.setObjectName("actionAPISendFirmware")
        self.actionAboutBoard = QtWidgets.QAction(CtrlWindow)
        self.actionAboutBoard.setObjectName("actionAboutBoard")
        self.actionMotorMode = QtWidgets.QAction(CtrlWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/img/32/parameters.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMotorMode.setIcon(icon10)
        self.actionMotorMode.setObjectName("actionMotorMode")
        self.actionRegistersView = QtWidgets.QAction(CtrlWindow)
        self.actionRegistersView.setObjectName("actionRegistersView")
        self.actionConnect = QtWidgets.QAction(CtrlWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/img/32/key.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionConnect.setIcon(icon11)
        self.actionConnect.setObjectName("actionConnect")
        self.actionReset = QtWidgets.QAction(CtrlWindow)
        self.actionReset.setObjectName("actionReset")
        self.actionStore = QtWidgets.QAction(CtrlWindow)
        self.actionStore.setCheckable(True)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/img/24/memory-set.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStore.setIcon(icon12)
        self.actionStore.setObjectName("actionStore")
        self.menuSystem.addAction(self.actionLink)
        self.menuSystem.addAction(self.actionConnect)
        self.menuSystem.addAction(self.actionRefresh)
        self.menuSystem.addAction(self.actionAutoRefresh)
        self.menuSystem.addSeparator()
        self.menuSystem.addAction(self.actionQuit)
        self.menuMotor.addAction(self.actionMotorMode)
        self.menuMotor.addAction(self.actionMotorStart)
        self.menuMotor.addAction(self.actionMotorStop)
        self.menuMotor.addAction(self.actionLightEnabled)
        self.menuMotor.addAction(self.actionLightBlue)
        self.menuMotor.addAction(self.actionMotorReverse)
        self.menuHelp.addAction(self.actionHelp)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionRegistersView)
        self.menuBoard.addAction(self.actionFirmReset)
        self.menuBoard.addAction(self.actionAPISendFirmware)
        self.menuBoard.addAction(self.actionAboutBoard)
        self.menuBoard.addAction(self.actionReset)
        self.menuMemory.addAction(self.actionStore)
        self.menuBar.addAction(self.menuSystem.menuAction())
        self.menuBar.addAction(self.menuBoard.menuAction())
        self.menuBar.addAction(self.menuWorkspace.menuAction())
        self.menuBar.addAction(self.menuMotor.menuAction())
        self.menuBar.addAction(self.menuMemory.menuAction())
        self.menuBar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionLink)
        self.toolBar.addAction(self.actionAutoRefresh)
        self.toolBar.addAction(self.actionRefresh)
        self.toolBar.addAction(self.actionConnect)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionMotorStart)
        self.toolBar.addAction(self.actionMotorStop)
        self.toolBar.addAction(self.actionMotorReverse)
        self.toolBar.addAction(self.actionLightEnabled)
        self.toolBar.addAction(self.actionLightBlue)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionMotorMode)
        self.toolBar.addSeparator()

        self.retranslateUi(CtrlWindow)
        self.actionQuit.triggered.connect(CtrlWindow.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(CtrlWindow)

    def retranslateUi(self, CtrlWindow):
        _translate = QtCore.QCoreApplication.translate
        CtrlWindow.setWindowTitle(_translate("CtrlWindow", "DsmCP - Control"))
        self.groupBoxMemories.setTitle(_translate("CtrlWindow", "Memories"))
        self.menuSystem.setTitle(_translate("CtrlWindow", "System"))
        self.menuMotor.setTitle(_translate("CtrlWindow", "Motor"))
        self.menuHelp.setTitle(_translate("CtrlWindow", "Help"))
        self.menuWorkspace.setTitle(_translate("CtrlWindow", "Workspace"))
        self.menuBoard.setTitle(_translate("CtrlWindow", "Board"))
        self.menuMemory.setTitle(_translate("CtrlWindow", "Memory"))
        self.toolBar.setWindowTitle(_translate("CtrlWindow", "toolBar"))
        self.actionLink.setText(_translate("CtrlWindow", "Link"))
        self.actionLink.setToolTip(_translate("CtrlWindow", "Link DCP to board"))
        self.actionMotorStart.setText(_translate("CtrlWindow", "Start"))
        self.actionMotorStart.setToolTip(_translate("CtrlWindow", "Start the motor"))
        self.actionMotorStart.setShortcut(_translate("CtrlWindow", "F2"))
        self.actionLightEnabled.setText(_translate("CtrlWindow", "Light Enabled"))
        self.actionLightEnabled.setToolTip(_translate("CtrlWindow", "Enable/disable Light"))
        self.actionLightEnabled.setShortcut(_translate("CtrlWindow", "F4"))
        self.actionLightBlue.setText(_translate("CtrlWindow", "BlueLight"))
        self.actionLightBlue.setToolTip(_translate("CtrlWindow", "Switch white / blue light"))
        self.actionLightBlue.setShortcut(_translate("CtrlWindow", "F9"))
        self.actionMotorReverse.setText(_translate("CtrlWindow", "Reverse"))
        self.actionMotorReverse.setToolTip(_translate("CtrlWindow", "Reverses the motor rotation direction"))
        self.actionMotorReverse.setShortcut(_translate("CtrlWindow", "F7"))
        self.actionAbout.setText(_translate("CtrlWindow", "About ..."))
        self.actionAbout.setShortcut(_translate("CtrlWindow", "Ctrl+F1"))
        self.actionQuit.setText(_translate("CtrlWindow", "Quit"))
        self.actionQuit.setShortcut(_translate("CtrlWindow", "Ctrl+Q"))
        self.actionAutoRefresh.setText(_translate("CtrlWindow", "AutoRefresh"))
        self.actionUnlink.setText(_translate("CtrlWindow", "Unlink"))
        self.actionUnlink.setToolTip(_translate("CtrlWindow", "Unlink DCP from board"))
        self.actionRefresh.setText(_translate("CtrlWindow", "Refresh"))
        self.actionRefresh.setToolTip(_translate("CtrlWindow", "Refresh"))
        self.actionRefresh.setShortcut(_translate("CtrlWindow", "F5"))
        self.actionHelp.setText(_translate("CtrlWindow", "Help"))
        self.actionHelp.setShortcut(_translate("CtrlWindow", "F1"))
        self.actionMotorStop.setText(_translate("CtrlWindow", "Stop"))
        self.actionMotorStop.setToolTip(_translate("CtrlWindow", "Stop the motor"))
        self.actionMotorStop.setShortcut(_translate("CtrlWindow", "F3"))
        self.actionFirmReset.setText(_translate("CtrlWindow", "Frimware Reset..."))
        self.actionFirmReset.setToolTip(_translate("CtrlWindow", "Reset the firmware settings"))
        self.actionAPISendFirmware.setText(_translate("CtrlWindow", "Send Firmware..."))
        self.actionAboutBoard.setText(_translate("CtrlWindow", "About board..."))
        self.actionMotorMode.setText(_translate("CtrlWindow", "Motor mode..."))
        self.actionMotorMode.setToolTip(_translate("CtrlWindow", "Show motor mode dialog"))
        self.actionMotorMode.setShortcut(_translate("CtrlWindow", "F10"))
        self.actionRegistersView.setText(_translate("CtrlWindow", "Registers view"))
        self.actionRegistersView.setShortcut(_translate("CtrlWindow", "Shift+F1"))
        self.actionConnect.setText(_translate("CtrlWindow", "Connect..."))
        self.actionConnect.setToolTip(_translate("CtrlWindow", "Connect"))
        self.actionReset.setText(_translate("CtrlWindow", "Reset..."))
        self.actionReset.setToolTip(_translate("CtrlWindow", "Reset the board"))
        self.actionStore.setText(_translate("CtrlWindow", "Store"))
